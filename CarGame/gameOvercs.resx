<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mQjWWIElF5Es+ZD1GIgdiImC0AHtqHxoMJAMMAcMRw3D15Ad+JMdOJDraHK25wQMyQAFSYdCKZAW2HM2
        kJMDSY3yZ5RHGU/weJRYmZVMSXLhJwk9iZHgJ5BLAH5zgJPaqAgXmZGMIAABoJVuiZVy6IxpKYdleQig
        GJQM2ZXS0JPQ55bQNwd70HQXsAR56QT7RwgX0JbrWHz/OP+AATAHekmHRlmWQth18OgE+0iBUriZnJmX
        VsgIykiVYbmUo0mUj3CZZ0keC6CVnNmaUjiPtbYAY0mXRVgIKNCNmGmUCQB+qakMfJCYJRecwhmc2BZP
        ylhyCxAAn7kjyWlyJed9TnBy2KYXydmc4md7Jmedw7md2zkJKCCcJ4ec2IackQCch2mX3Jme3IkCFmdy
        GZmch3AB4JedxGkNxxgtGEgeyNgI0qKftLYI0pKf9zmg+Pmfk0CRBGqgoZCgCZqfkoGgFNmDGEhroFIW
        FnqhGJqhGrqhHNqhHvqhIBqiIjqiJFqiJnqiKJqiKrqiLNqiLvqiMBqjMjqjNFqjNnpdoziaozq6ozza
        oz76o0AapEI6pERapEZ6pEiapEq6pEzapE76pFAapVI6pVRapVZ6pViapVq6pVzapV76pWAapmI6pmRa
        pmZ6pmiapmq6pmzapm76pnAap3IaooEAACH5BARkAAAALCYAVwDhABoAAAdugH6Cg4SFhoeIiYqLjI2O
        j5CRkpOUlZaXmJmam5ydnp+goaKjpKWmp6ipqqusra6vsLGys7S1tre4ubq7vL2+v8DBwsPExcbHyMnK
        y8zNzs/Q0dLT1NXW19jZ2tvc3d7f4OHi4+Tl5ufo6erryIEAOw==
</value>
  </data>
</root>